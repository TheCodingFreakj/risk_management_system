"""
Django settings for risk_service project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
import os
from pathlib import Path
from dotenv import load_dotenv
env_path = Path('.') / '.env'
load_dotenv(dotenv_path=env_path)
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(3bskg&j@=%0u1t!(7g4=f#q&ulj*z2&^hr3($l)2@d*i&w^ae'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS','riskservices').split(',')
print(ALLOWED_HOSTS)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'risk_analysis'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'risk_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'risk_service.wsgi.application'

# from pymongo import MongoClient

# MONGO_DB_NAME = 'risk_service'
# MONGO_CLIENT = MongoClient('mongodb+srv://pallavy57:pallavy57@cluster0.unsm7.mongodb.net/')
# MONGO_DB = MONGO_CLIENT[MONGO_DB_NAME]
# # Database
# # https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': os.environ.get('DB_NAME'),
#         'USER': os.environ.get('DB_USER'),
#         'PASSWORD': os.environ.get('DB_PASSWORD'),
#         'HOST': os.environ.get('DB_HOST'),
#         'PORT': os.environ.get('DB_PORT', '5432'),
#         'OPTIONS': {
#             'options': f'-c search_path="{os.environ.get("DB_SCHEMA")}"'
#         },
#     }
# }
from mongoengine import connect

connect(
    db='risk_analysis',
    username='pallavy57',  # Optional
    password='pallavy57',  # Optional
    host='mongodb+srv://pallavy57:pallavy57@cluster0.unsm7.mongodb.net/risk_analysis?retryWrites=true&w=majority',  # Replace with your MongoDB URI
    authentication_source='admin'  # Optional
)

# DATABASES = {
#     # 'default': {
#     #     # 'ENGINE': 'django.db.backends.postgresql',
#     #     # 'NAME': os.environ.get('DB_NAME'),
#     #     # 'USER': os.environ.get('DB_USER'),
#     #     # 'PASSWORD': os.environ.get('DB_PASSWORD'),
#     #     # 'HOST': os.environ.get('DB_HOST'),
#     #     # 'PORT': os.environ.get('DB_PORT', '5432'),
#     #     # 'OPTIONS': {
#     #     #     'options': f'-c search_path="{os.environ.get("DB_SCHEMA")}"'
#     #     # },
#     # },
#     # 'mongo': {
#     #     'ENGINE': 'djongo',
#     #     'NAME': 'risk_analysis',
#     #     'ENFORCE_SCHEMA': False,
#     #     'CLIENT': {
#     #         'host': 'mongodb+srv://pallavy57:pallavy57@cluster0.unsm7.mongodb.net/',
#     #         'username': 'pallavy57',  # Optional
#     #         'password': 'pallavy57',  # Optional
#     #         'authSource': 'admin',  # Optional
#     #         'authMechanism': 'SCRAM-SHA-1',  # Optional
#     #     }
#     # }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
